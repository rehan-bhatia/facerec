{"version":3,"sources":["Components/Nav.js","Components/Logo.js","Components/ImageSearch.js","Components/Rank.js","Components/Register.js","Components/FaceR.js","Components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","ImageSearch","onInChange","onButtonSubmit","type","onChange","Rank","name","entries","Register","props","onEmailChange","event","setState","email","target","value","onPasswordChange","password","onNameChange","onSubmitRegister","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","id","loadUser","catch","err","console","log","this","htmlFor","React","Component","FaceR","url","box","marginTop","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","SignIn","signInEmail","signInPassword","onSubmitSignIn","initialState","input","imageURL","route","joined","App","data","boundingBox","info","detectedFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","makeBox","count","Object","assign","Nav","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c2163cd8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange, isSignedIn }) => {\n\tif (isSignedIn === true) {\n\t\treturn (\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={()=>onRouteChange('signin')} className='f3 dim black link pointer pa3 underline'> Sign Out </p>\n\t\t\t</nav>\n\t\t);\t\n\t} else {\n\t\treturn (\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={()=>onRouteChange('signin')} className='f3 dim black link pointer pa3 underline'> Sign In </p>\n\t\t\t\t<p onClick={()=>onRouteChange('register')} className='f3 dim black link pointer pa3 underline'> Register </p>\n\t\t\t</nav>\n\t\t);\n\t}\n\t\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\n\nconst Logo = () => {\n\treturn (\n\t\t<Tilt className=\"Tilt ma4 mt0\" options={{ max : 40 }} style={{ height: 150, width: 150 }} >\n \t\t\t<div className=\"Tilt-inner\"> \n \t\t\t\t<img alt=\"Logo\" style ={{height: '150px', width: '150px', display: 'flex'}}src=\"https://www.hello.com/img_/hellowithwaves.png\"/>\n \t\t\t</div>\n\t\t</Tilt>\n\t\t);\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageSearch.css';\n\nconst ImageSearch = ({onInChange, onButtonSubmit}) => {\n\treturn(\n\t\t<div>\n\t\t\t<p className='white f3'>{\"I can detect a face in your images. Give me a try!\"} </p>\n\t\t\t<div className='center'>\n\t\t\t\t<div className='center form'>\n\t\t\t\t\t<input className='f4 pa2 w-70 center mr2' type='tex' onChange={onInChange}/>\n\t\t\t\t\t<button onClick={onButtonSubmit} className='w-30 grow link white bg-light-purple f4 ph3 pv2 dib'>Detect!</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default ImageSearch;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n\treturn (\n\t\t<div>\n\t\t\t<p className='light-pink f3'>{`Hi ${name}! You total entries are`}</p>\n\t\t\t<p className='light-pink f1 mt0'>{`${entries}`}</p>\n\t\t</div>\n\t);\n}\n\nexport default Rank;","import React from 'react';\n\n\nclass Register extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tname: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value});\n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tonSubmitRegister = () => {\n\t\tfetch('https://peaceful-anchorage-27081.herokuapp.com/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(user => {\n\t\t\t\tif (user.id) {\n\t\t\t\t\tthis.props.loadUser(user);\n\t\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err=> console.log(err))\n\t}\n\n\trender() {\n\t\tconst {onRouteChange} = this.props\n\t\treturn (\n\t\t\t<article className=\"the-form center mw5 mw6-ns w-100 shadow-5 br6 hidden ba b--black-10 mv4\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f2 bg-dark-blue white mv0 pv2 ph3 w-100\">Register</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Username</label>\n\t\t\t\t        <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input onClick={this.onSubmitRegister} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p  onClick={()=> onRouteChange('signin')} className=\"register-button f6 link dim black db\">Already have an account? Sign in.</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t\t)\n\t}\n}\n\nexport default Register;","import React from 'react';\nimport './FaceR.css';\n\n\nconst FaceR = ({ url, box }) => {\n\treturn(\n\t\t<div style={{marginTop:'20px'}} className='center'>\n\t\t\t<div className='absolute'>\n\t\t\t\t<img id='inputImg' alt='Output will be shown here' src={url} style={{width: '500px', height: 'auto'}}/>\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, bottom: box.bottomRow, left: box.leftCol, right: box.rightCol}}></div>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default FaceR;","import React from 'react';\n\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword: event.target.value});\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('https://peaceful-anchorage-27081.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(user => {\n\t\t\t\tif (user.id) {\n\t\t\t\t\tthis.props.loadUser(user);\n\t\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst {onRouteChange} = this.props;\n\t\treturn (\n\t\t\t<article className=\"the-form center mw5 mw6-ns w-100 shadow-5 br6 hidden ba b--black-10 mv4\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f2 bg-dark-blue white mv0 pv2 ph3 w-100\">Sign In</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input onClick={this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p onClick={()=>onRouteChange('register')} className=\"register-button f6 link dim black db\">Don't have an account? Register</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t)\n\t}\n}\n\t\n\nexport default SignIn;","import React from 'react';\nimport Navigation from './Components/Nav.js';\nimport Logo from './Components/Logo.js'\nimport ImageSearch from './Components/ImageSearch'\nimport Rank from './Components/Rank';\nimport Register from './Components/Register';\nimport FaceR from './Components/FaceR';\nimport SignIn from './Components/SignIn'\nimport './App.css';\nimport 'tachyons';\n\n\n\nconst initialState = {\n  input: '',\n  imageURL:'',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n\n}\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  onInChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  boundingBox= (info) => {\n    const detectedFace = info.outputs[0].data.regions[0].region_info.bounding_box;\n    const image=document.getElementById('inputImg');\n    const width=Number(image.width);\n    const height=Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: (detectedFace.left_col * width),\n      rightCol: width - (detectedFace.right_col * width),\n      topRow: (detectedFace.top_row * height),\n      bottomRow: height - (detectedFace.bottom_row * height),\n      }\n  }\n\n  makeBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input})\n      fetch('https://peaceful-anchorage-27081.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://peaceful-anchorage-27081.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n        }\n        this.makeBox(this.boundingBox(response))\n      })\n      .catch(err=>console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route==='signin') {\n      this.setState(initialState)\n    } else if (route==='home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n      { this.state.route === 'signin' \n        ? <div className='sign-in'>\n            <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          </div>\n        : (this.state.route ==='home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageSearch onInChange={this.onInChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceR box={this.state.box} url={this.state.imageURL} />\n            </div>\n\n          : <div className='sign-in'>\n              <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            </div>\n          )\n\n        \n      }\n      </div>        \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}